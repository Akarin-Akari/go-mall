-- 创建数据库
CREATE DATABASE IF NOT EXISTS MALL_GO CHARACTER SET UTF8MB4 COLLATE UTF8MB4_UNICODE_CI;

USE MALL_GO;

-- 创建用户表
CREATE TABLE IF NOT EXISTS USERS (
    ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(50) NOT NULL UNIQUE,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    NICKNAME VARCHAR(50),
    AVATAR VARCHAR(255),
    PHONE VARCHAR(20),
    ROLE VARCHAR(20) DEFAULT 'user',
    STATUS VARCHAR(20) DEFAULT 'active',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    INDEX IDX_USERNAME (USERNAME),
    INDEX IDX_EMAIL (EMAIL),
    INDEX IDX_STATUS (STATUS)
);

-- 创建商品分类表
CREATE TABLE IF NOT EXISTS CATEGORIES (
    ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(500),
    PARENT_ID BIGINT UNSIGNED NULL,
    LEVEL INT DEFAULT 1,
    SORT INT DEFAULT 0,
    STATUS VARCHAR(20) DEFAULT 'active',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    INDEX IDX_PARENT_ID (PARENT_ID),
    INDEX IDX_STATUS (STATUS),
    INDEX IDX_SORT (SORT)
);

-- 创建商品表
CREATE TABLE IF NOT EXISTS PRODUCTS (
    ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(200) NOT NULL,
    DESCRIPTION TEXT,
    PRICE DECIMAL(10, 2) NOT NULL,
    STOCK INT NOT NULL DEFAULT 0,
    CATEGORY_ID BIGINT UNSIGNED NOT NULL,
    STATUS VARCHAR(20) DEFAULT 'active',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    INDEX IDX_CATEGORY_ID (CATEGORY_ID),
    INDEX IDX_STATUS (STATUS),
    INDEX IDX_NAME (NAME),
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(ID)
);

-- 创建商品图片表
CREATE TABLE IF NOT EXISTS PRODUCT_IMAGES (
    ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    PRODUCT_ID BIGINT UNSIGNED NOT NULL,
    URL VARCHAR(500) NOT NULL,
    SORT INT DEFAULT 0,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    INDEX IDX_PRODUCT_ID (PRODUCT_ID),
    INDEX IDX_SORT (SORT),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
);

-- 创建订单表
CREATE TABLE IF NOT EXISTS ORDERS (
    ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    ORDER_NO VARCHAR(50) NOT NULL UNIQUE,
    USER_ID BIGINT UNSIGNED NOT NULL,
    TOTAL_AMOUNT DECIMAL(10, 2) NOT NULL,
    STATUS VARCHAR(20) DEFAULT 'pending',
    PAYMENT_METHOD VARCHAR(50),
    PAYMENT_STATUS VARCHAR(20) DEFAULT 'unpaid',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    INDEX IDX_USER_ID (USER_ID),
    INDEX IDX_ORDER_NO (ORDER_NO),
    INDEX IDX_STATUS (STATUS),
    INDEX IDX_PAYMENT_STATUS (PAYMENT_STATUS),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

-- 创建订单项表
CREATE TABLE IF NOT EXISTS ORDER_ITEMS (
    ID BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    ORDER_ID BIGINT UNSIGNED NOT NULL,
    PRODUCT_ID BIGINT UNSIGNED NOT NULL,
    QUANTITY INT NOT NULL,
    PRICE DECIMAL(10, 2) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX IDX_ORDER_ID (ORDER_ID),
    INDEX IDX_PRODUCT_ID (PRODUCT_ID),
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
);

-- 插入测试数据

-- 插入用户
INSERT INTO USERS (
    USERNAME,
    EMAIL,
    PASSWORD,
    NICKNAME,
    ROLE
) VALUES (
    'admin',
    'admin@example.com',
    'admin123',
    '管理员',
    'admin'
),
(
    'user1',
    'user1@example.com',
    'user123',
    '测试用户1',
    'user'
),
(
    'user2',
    'user2@example.com',
    'user123',
    '测试用户2',
    'user'
);

-- 插入商品分类
INSERT INTO CATEGORIES (
    NAME,
    DESCRIPTION,
    LEVEL,
    SORT
) VALUES (
    '电子产品',
    '各类电子产品',
    1,
    1
),
(
    '服装鞋帽',
    '时尚服装和鞋帽',
    1,
    2
),
(
    '图书音像',
    '图书和音像制品',
    1,
    3
),
(
    '家居用品',
    '家居生活用品',
    1,
    4
);

-- 插入商品
INSERT INTO PRODUCTS (
    NAME,
    DESCRIPTION,
    PRICE,
    STOCK,
    CATEGORY_ID
) VALUES (
    'iPhone 15',
    '苹果最新手机',
    5999.00,
    100,
    1
),
(
    'MacBook Pro',
    '专业级笔记本电脑',
    12999.00,
    50,
    1
),
(
    'Nike运动鞋',
    '舒适透气的运动鞋',
    299.00,
    200,
    2
),
(
    'Python编程书',
    'Python入门教程',
    59.00,
    500,
    3
),
(
    '智能台灯',
    '护眼智能台灯',
    199.00,
    150,
    4
);

-- 插入商品图片
INSERT INTO PRODUCT_IMAGES (
    PRODUCT_ID,
    URL,
    SORT
) VALUES (
    1,
    'https://example.com/iphone15-1.jpg',
    1
),
(
    1,
    'https://example.com/iphone15-2.jpg',
    2
),
(
    2,
    'https://example.com/macbook-1.jpg',
    1
),
(
    3,
    'https://example.com/nike-shoes.jpg',
    1
),
(
    4,
    'https://example.com/python-book.jpg',
    1
),
(
    5,
    'https://example.com/lamp.jpg',
    1
);